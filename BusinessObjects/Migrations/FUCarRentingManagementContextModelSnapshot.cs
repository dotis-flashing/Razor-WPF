// <auto-generated />
using System;
using BusinessObjects.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(FUCarRentingManagementContext))]
    partial class FUCarRentingManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObjects.Entity.CarInformation", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"), 1L, 1);

                    b.Property<string>("CarDescription")
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CarRentingPricePerDay")
                        .HasColumnType("money");

                    b.Property<string>("CarStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FuelType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("ManufacturerID");

                    b.Property<int?>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int?>("SeatingCapacity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("CarInformation", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<DateTime?>("CustomerBirthday")
                        .HasColumnType("date");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D1053455277C1A")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ManufacturerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ManufacturerCountry")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManufacturerStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturer", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.RentingDetail", b =>
                {
                    b.Property<int>("RentingTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RentingTransactionID");

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("RentingDetailStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("RentingTransactionId", "CarId");

                    b.HasIndex("CarId");

                    b.ToTable("RentingDetail", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.RentingTransaction", b =>
                {
                    b.Property<int>("RentingTransationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RentingTransationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentingTransationId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("RentingDate")
                        .HasColumnType("date");

                    b.Property<string>("RentingStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("RentingTransationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("RentingTransaction", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("SupplierAddress")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SupplierDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupplierStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Entity.CarInformation", b =>
                {
                    b.HasOne("BusinessObjects.Entity.Manufacturer", "Manufacturer")
                        .WithMany("CarInformations")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CarInformation_Manufacturer");

                    b.HasOne("BusinessObjects.Entity.Supplier", "Supplier")
                        .WithMany("CarInformations")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CarInformation_Supplier");

                    b.Navigation("Manufacturer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BusinessObjects.Entity.RentingDetail", b =>
                {
                    b.HasOne("BusinessObjects.Entity.CarInformation", "Car")
                        .WithMany("RentingDetails")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RentingDetail_CarInformation");

                    b.HasOne("BusinessObjects.Entity.RentingTransaction", "RentingTransaction")
                        .WithMany("RentingDetails")
                        .HasForeignKey("RentingTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RentingDetail_RentingTransaction");

                    b.Navigation("Car");

                    b.Navigation("RentingTransaction");
                });

            modelBuilder.Entity("BusinessObjects.Entity.RentingTransaction", b =>
                {
                    b.HasOne("BusinessObjects.Entity.Customer", "Customer")
                        .WithMany("RentingTransactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RentingTransaction_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BusinessObjects.Entity.CarInformation", b =>
                {
                    b.Navigation("RentingDetails");
                });

            modelBuilder.Entity("BusinessObjects.Entity.Customer", b =>
                {
                    b.Navigation("RentingTransactions");
                });

            modelBuilder.Entity("BusinessObjects.Entity.Manufacturer", b =>
                {
                    b.Navigation("CarInformations");
                });

            modelBuilder.Entity("BusinessObjects.Entity.RentingTransaction", b =>
                {
                    b.Navigation("RentingDetails");
                });

            modelBuilder.Entity("BusinessObjects.Entity.Supplier", b =>
                {
                    b.Navigation("CarInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
